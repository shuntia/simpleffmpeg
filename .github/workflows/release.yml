name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  release:
    types:
      - published

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: cargo build --all-targets (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact-name: simpleffmpeg-linux-x86_64
            bin-path: target/release/simpleffmpeg
          - os: macos-latest
            artifact-name: simpleffmpeg-macos-aarch64
            bin-path: target/release/simpleffmpeg
          - os: windows-latest
            artifact-name: simpleffmpeg-windows-x86_64
            bin-path: target/release/simpleffmpeg.exe
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Fetch dependencies
        run: cargo fetch

      - name: Build all targets
        run: cargo build --all-targets --verbose

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.bin-path }}
          if-no-files-found: error

  release:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: build
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-ext: zip
          - os: macos-13
            target: x86_64-apple-darwin
            archive-ext: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive-ext: tar.gz
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Upload ${{ matrix.target }} binary
        uses: taiki-e/upload-rust-binary-action@v1.27.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          bin: simpleffmpeg
          target: ${{ matrix.target }}
          archive: simpleffmpeg-${{ github.event.release.tag_name }}-${{ matrix.target }}.${{ matrix.archive-ext }}
          manifest-path: Cargo.toml
          profile: release
